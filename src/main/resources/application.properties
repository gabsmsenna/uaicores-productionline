# Hibernate
quarkus.hibernate-orm.schema-management.strategy=update
quarkus.hibernate-orm.log.sql=true

# DEV Database
quarkus.datasource.db-kind = postgresql 
quarkus.datasource.username = quarkususer
quarkus.datasource.password = ultraverysecret
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/uaicores_db

# Security
quarkus.security.users.embedded.enabled=false

# JWT Configuration
mp.jwt.verify.issuer=https://uaicores-productionline.com
mp.jwt.verify.publickey.location=jwt/publicKey.pem
smallrye.jwt.sign.key.location=privateKey.pem

# Regra padrao: exige autenticacao para todos os endpoints
quarkus.http.auth.policy.default-policy.roles-allowed=*

# Paths publicos: nao exigem autenticacao
quarkus.http.auth.permission.public.paths=/auth/*, /q/swagger-ui/*, /q/openapi
quarkus.http.auth.permission.public.policy=permit

# --- Test Configuration ---
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1

# Dev user config
dev.user.name=dev_gabriel_senna
dev.user.password=8077632G%%fm

# Ativa o CORS
quarkus.http.cors.enabled=true
# Permite chamadas do seu Next.js local
quarkus.http.cors.origins=http://localhost:3000
# Métodos HTTP aceitos
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
# Headers aceitos
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
# Headers expostos (opcional)
quarkus.http.cors.exposed-headers=location,authorization
# Tempo que o navegador pode cachear o preflight (em segundos)
quarkus.http.cors.access-control-max-age=86400